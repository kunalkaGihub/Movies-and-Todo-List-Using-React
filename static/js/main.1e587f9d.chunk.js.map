{"version":3,"sources":["Components/navbar.jsx","Components/cart.jsx","Components/carts.jsx","Components/TodoItem.jsx","Components/Todos.jsx","Components/AddTodo.jsx","Components/notFound.jsx","Components/home.jsx","Components/Admin/Sidebar.jsx","Components/Admin/posts.jsx","Components/Admin/dashboard.jsx","Components/Common/like.jsx","Components/moviesTable.jsx","Components/Services/fakeGenre.jsx","Components/Services/fakeMovies.jsx","Components/Common/pagination.jsx","Components/listGroup.jsx","Components/movies.jsx","Components/Common/paginate.jsx","Components/input.jsx","Components/select.jsx","Components/Common/form.jsx","Components/loginForm.jsx","Components/registration.jsx","Components/movieForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Link","to","id","NavLink","aria-current","totalCounters","cart","this","getBadgeClass","formatCount","onClick","onIncrement","counter","onDecrement","disabled","value","onDelete","Component","Carts","onReset","counters","map","TodoItem","scope","todolist","item","sno","place","Todos","length","AddTodo","useState","setItem","setPlace","style","color","htmlFor","type","onChange","e","target","aria-describedby","preventDefault","addtodo","alert","Notfound","Home","Sidebar","Posts","Dashboard","Route","path","render","Like","classes","liked","cursor","aria-hidden","MoviesTable","raiseSort","column","sortColumn","order","onSort","renderSortIcon","movies","handleLike","marginBottom","movie","_id","title","genre","name","numberInStock","dailyRentalRate","genres","getGenres","filter","g","publishDate","saveMovie","movieInDb","find","m","genresAPI","genreId","Date","now","toString","push","Pagination","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","console","log","pages","_","range","page","Genre","onItemSelect","selectedGenre","textProperty","valueProperty","defaultProps","Movies","state","handleDelete","setState","index","indexOf","handlePageChange","handleSelectedGenre","count","allMovies","filtered","totalmovies","startIndex","slice","take","paginate","orderBy","newMovie","Input","error","label","Select","options","option","Form","data","errors","validate","result","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","doSubmit","handleChange","input","currentTarget","errorMessage","LoginForm","username","password","string","required","onSubmit","renderInput","renderButton","Registration","email","min","MovieForm","number","max","history","movieId","match","params","replace","mapToViewModel","renderSelect","App","handleIncrement","handleDecrement","counterId","c","handleReset","handleTodoDelete","todoId","t","addTodo","myTodo","todos","Fragment","Switch","Redirect","from","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.1e587f9d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { NavLink , Link} from \"react-router-dom\"\n\nconst Navbar = (props) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          TeaTech\n        </Link>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/todo\">\n                Todo\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/movies\">\n                Movies\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/cart\">\n                Cart - <span className=\"badge badge-success\">{props.totalCounters}</span>\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/aboutus\">\n                About Us\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/admin\">\n                Dashboard\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/registration\">\n                Registration\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass cart extends Component {\n\n    render() { \n        return ( \n            <div className=\"row\">\n                <div className=\"col-1\">\n                    <span className={this.getBadgeClass()}>{this.formatCount()}</span>\n                </div>\n                <div className=\"col\">\n                    <button onClick={()=>this.props.onIncrement(this.props.counter)} \n                    className=\"m-2 btn btn-info btn-sm\">Increment</button>\n                    \n                    <button onClick={()=>this.props.onDecrement(this.props.counter)} \n                    className=\"m-2 btn btn-secondary btn-sm\" disabled={this.props.counter.value === 0? \"disabled\":\"\"}>\n                        Decrement</button>\n                    \n                    <button onClick={()=>this.props.onDelete(this.props.counter.id)} \n                    className=\" btn btn-danger btn-sm\">Delete</button>\n                </div> \n            </div>\n         );\n    }\n\n    formatCount(){\n        const { value } = this.props.counter;\n        return value === 0? \"Zero\": value;\n    }\n\n    getBadgeClass(){\n        let classes = \"m-2 badge badge-\";\n        return classes += ( this.props.counter.value === 0) ? \"warning\": \"primary\"\n    }\n\n\n}\n \nexport default cart;","import React, { Component } from 'react';\nimport Cart from \"./cart\"\n\nclass Carts extends Component {\n    \n\n    render() { \n        return ( \n            <div>\n                <button onClick={this.props.onReset} className=\"btn btn-primary btn-sm my-3\">Reset</button>\n                {this.props.counters.map(counter =>\n                    <Cart \n                    key={counter.id} \n                    onDelete={this.props.onDelete} \n                    onIncrement = {this.props.onIncrement}\n                    onDecrement = {this.props.onDecrement}\n                    // value={counter.value} \n                    // id={counter.id}\n                    counter={counter}\n                    />\n                )}\n            </div>\n         );\n    }\n}\n \nexport default Carts;","import React, { Component } from 'react';\n\nconst TodoItem = (props) => {\n    return ( \n        <>\n            <table className=\"table my-3\">\n                <thead>\n                    <tr>\n                    <th scope=\"col\">Sno.</th>\n                    <th scope=\"col\">Sports Name</th>\n                    <th scope=\"col\">Place</th>\n                    <th scope=\"col\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.todolist.map(item =>\n                    <tr>\n                    <th scope=\"row\">{item.sno}</th>\n                    <td>{item.item}</td>\n                    <td>{item.place}</td>\n                    <td><button onClick={()=>props.onDelete(item.sno)} className=\"btn btn-danger btn-sm\">Delete</button></td>\n                    </tr>  \n                    )}\n                                \n                </tbody>\n            </table>\n        </>\n     );\n}\n \nexport default TodoItem;","import React, { Component } from 'react';\nimport TodoItem from \"./TodoItem\"\n\nconst Todos = (props) => {\n    return ( \n        <div>\n            {props.todolist.length === 0? \"No Items to display\":\n            <TodoItem \n                todolist={props.todolist}\n                key={props.todolist.sno}\n                onDelete={props.onDelete}\n            />\n            }\n            \n\n        </div>\n               \n     );\n}\n \nexport default Todos;","import React, { Component, useState } from 'react';\n\nconst AddTodo = (props) => {\n    const [item, setItem] = useState(\"\");\n    const [place, setPlace] = useState(\"\");\n\n    const submit = (e)=>{\n       \n        e.preventDefault();  // help in stop reloading page\n        if(!item || !place){\n            alert(\"Hey Something is missing\")\n        }else{\n            props.addtodo(item, place);\n        }  \n    }\n\n    return ( \n        <div>\n            <h2 className=\"my-2\" style={{color: \"green\" }}>What's In Your Bucket</h2>\n            <form className=\"my-3\">\n                <div className=\"mb-3\">\n                    <label htmlFor=\"item\" className=\"form-label\">Item Name</label>\n                    <input type=\"text\" value={item} onChange={(e)=>setItem(e.target.value)} className=\"form-control\" id=\"item\" aria-describedby=\"emailHelp\"/>\n                </div>\n                <div className=\"mb-3\">\n                    <label htmlFor=\"place\" className=\"form-label\">Place</label>\n                    <input type=\"text\" value={place} onChange={(e)=>setPlace(e.target.value)} className=\"form-control\" id=\"place\"/>\n                </div>\n                <button onClick={submit} type=\"submit\" className=\"btn btn-primary btn-sm\">Add Todo</button>\n            </form>\n        </div>\n     );\n}\n \nexport default AddTodo;","import React, { Component } from 'react';\n\n\nconst Notfound = () => {\n    return ( \n        <div>\n            <h1>Page Not Found</h1>\n        </div>\n     );\n}\n \nexport default Notfound;","import React, { Component } from 'react';\n\nconst Home = () => {\n    return ( \n        <div>\n            <h1 className=\"my-5\">Welcome to Home Page</h1>\n        </div>\n     );\n}\n \nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Sidebar = () => {\n    return ( \n        <ul>\n            <li>\n                <Link to=\"/admin/posts\">Posts</Link>\n            </li>\n        </ul>\n     );\n}\n \nexport default Sidebar;","import React, { Component } from 'react';\n\nconst Posts = () => {\n    return ( \n        <div>\n            <h1>No Posts</h1>\n        </div>\n     );\n}\n \nexport default Posts;","import React, { Component } from 'react';\nimport Sidebar from './Sidebar';\nimport Posts from './posts';\nimport { Route } from 'react-router-dom';\n\n\nconst Dashboard = () => {\n    return (  \n        <div>\n                <h1>Welcome to about us page</h1>\n                <Sidebar/>\n                <Route path=\"/admin/posts\" render={Posts}/> \n       </div>\n    );\n}\n \nexport default Dashboard;","import React, { Component } from 'react';\n\n\nconst Like = (props) => {\n    \n    let classes = \"fa fa-heart\"\n        if(!props.liked) {\n            classes += \"-o\";\n        }\n    return ( \n        <i onClick={props.onClick} className={classes} \n        style={{ cursor : \"pointer\" }} aria-hidden=\"true\"></i> \n     );\n}\n \n\n \nexport default Like;","import React, { Component } from 'react';\nimport Like from './Common/like';\nimport { Link } from 'react-router-dom';\nimport newMovie from './newMovies';\n\nclass MoviesTable extends Component {\n\n    raiseSort= (column) => {\n        const sortColumn = { ...this.props.sortColumn };\n        if(sortColumn.column === column){\n            sortColumn.order = (sortColumn.order === \"asc\") ? 'desc' :'asc';\n        }else{\n            sortColumn.column = column\n            sortColumn.order = \"asc\"\n        }\n        //console.log(sortColumn.column)\n        this.props.onSort(sortColumn)\n        \n    }\n\n    renderSortIcon = (column) =>{\n       // console.log(\"rendericon\")\n        if( column !== this.props.sortColumn.column) return null;\n        if(this.props.sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\n        return <i className=\"fa fa-sort-desc\"></i>\n    }\n    \n    render() { \n        const { movies, onDelete, handleLike, onSort} = this.props;\n        return ( \n            <>\n            <Link to=\"/movies/new\" className=\"btn btn-primary\" style={{marginBottom: 20}}>Add Movie</Link>\n            <table className=\"table m-1\">\n                    <thead>\n                        <tr>\n                        <th onClick={()=>this.raiseSort('title')} scope=\"col\">Title {this.renderSortIcon(\"title\")}</th>\n                        <th onClick={()=>this.raiseSort('genre.name')} scope=\"col\">Genre {this.renderSortIcon('genre.name')}</th>\n                        <th onClick={()=>this.raiseSort('numberInStock')} scope=\"col\">Stoke {this.renderSortIcon('numberInStock')}</th>\n                        <th onClick={()=>this.raiseSort('dailyRentalRate')} scope=\"col\">Rating {this.renderSortIcon('dailyRentalRate')}</th>\n                        <th/>\n                        <th/>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {movies.map(movie =>\n                            <tr>\n                            <Link to={`/movies/${movie._id}`}><td>{movie.title}</td></Link>\n                            <td>{movie.genre.name}</td>\n                            <td>{movie.numberInStock}</td>\n                            <td>{movie.dailyRentalRate}</td>\n                            <td>\n                               <Like liked={movie.liked} onClick={()=>handleLike(movie)}/>\n                            </td>\n                            <td><button onClick={()=>onDelete(movie)} className=\"btn btn-danger btn-sm\">Delete</button></td>\n                            </tr>\n                        )}\n                        \n                    </tbody>\n                </table>\n            </>\n         );\n    }\n}\n \nexport default MoviesTable;","export const genres = [\n    { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n  ];\n  \n  export function getGenres() {\n    return genres.filter(g => g);\n  }","import * as genresAPI from \"./fakeGenre\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",  //default name of id column in MONGO DB\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React, { Component } from 'react';\nimport _ from \"lodash\";\n\n\nconst Pagination = (props) => {\n    const { itemsCount, pageSize, onPageChange, currentPage} = props\n\n    const pagesCount = Math.ceil(itemsCount/pageSize);\n    console.log(pagesCount) // ...3\n   if(pagesCount===1) return null;\n    const pages = _.range(1, pagesCount+1);\n    console.log(pages)//...[1,2,3]\n\n    return ( \n            <nav>\n                <ul className=\"pagination\">\n                    {pages.map(page=>\n                    <li className={page === currentPage? \"page-item active\":\"page-item\"}>\n                        <a onClick={()=> onPageChange(page)} className=\"page-link\">{page}</a>\n                    </li>)}\n                        \n                </ul>\n\n            </nav>\n     )\n}\n \nexport default Pagination;\n","import React, { Component } from 'react';\n\n\nconst Genre = (props) => {\n    const { genres, onItemSelect, selectedGenre , textProperty, valueProperty } = props;        \n        return ( \n            <ul className=\"list-group\">\n                {genres.map(genre=>\n                <li \n                    key={genre[valueProperty]} \n                    onClick={()=>onItemSelect(genre)} \n                    className={genre === selectedGenre?\"list-group-item list-group-item-success active\":\"list-group-item list-group-item-success\"}>\n                {genre[textProperty]}\n                </li>)\n                }\n            </ul>\n         );\n}\n\nGenre.defaultProps = {\n    textProperty:\"name\",\n    valueProperty: \"_id\"\n}\n \n \nexport default Genre;","import React, { Component } from 'react';\nimport MoviesTable from './moviesTable';\nimport { getMovies } from \"./Services/fakeMovies\";\nimport Pagination from './Common/pagination';\nimport {paginate} from \"./Common/paginate\"\nimport Genre from './listGroup';\nimport { getGenres } from './Services/fakeGenre';\nimport _ from \"lodash\";\n\n\nclass Movies extends Component {\n    state = { \n        movies : [],\n        genres: [],\n        pageSize:4,\n        currentPage:1,\n        selectedGenre:null,\n        sortColumn:{ column:\"title\", order:\"asc\"}\n     }\n\n     componentDidMount(){\n         const genres = [{ _id:'', name: \"All Genres\"}, ...getGenres()]\n         this.setState({ movies: getMovies(), genres })\n     }\n    \n    handleDelete = (movie) => {\n        const movies = this.state.movies.filter(m=>m._id !== movie._id)\n        //return movies;\n        this.setState({ movies });\n    }\n\n    handleLike = (movie) =>{\n        const movies = [...this.state.movies] // saari movies ki list aagyi\n       // console.log(movies)\n        const index = movies.indexOf(movie) // saari movies mese clicked waali movie ka index nikaala\n        movies[index] = { ...movies[index] } // click waali ko pura uthaaya\n      //  console.log(movies[index])\n        movies[index].liked = !movies[index].liked // usme se liked pe uska opposite assign krdia\n        this.setState({movies});\n    }\n\n    handlePageChange=(page)=>{\n        this.setState({ currentPage: page});\n    }\n\n    handleSelectedGenre = (genre) =>{\n\n        this.setState({ selectedGenre : genre, currentPage:1 })\n        // let movies = this.state.movies.filter(m=> m.genre._id === genre._id )\n        \n        // this.setState({movies});\n    }\n\n    onSort = (sortColumn) =>{\n        this.setState({ sortColumn })\n    }\n\n\n    render() { \n        const {length:count} = this.state.movies;\n       // console.log(count)\n        \n       const { movies:allMovies, currentPage,selectedGenre, pageSize, genres, sortColumn } = this.state;\n        //console.log(currentPage)\n        \n        if(count===0)\n           return <p className=\"my-5\">No Movies</p>\n        \n        //console.log(selectedGenre)\n        const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m=> m.genre._id === selectedGenre._id) : allMovies;\n        \n        const sorted = _.orderBy(filtered, [sortColumn.column], [sortColumn.order])\n\n        // const movies = paginate(allMovies, currentPage, pageSize)\n        const movies = paginate(sorted, currentPage, pageSize)\n        \n        \n        return ( \n            <div>\n                <p className=\"my-5\">Showing {filtered.length} movies in the Database</p>\n                \n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <Genre \n                        genres={genres}  \n                        selectedGenre={this.state.selectedGenre}\n                        onItemSelect={this.handleSelectedGenre}/>\n                    </div>\n\n                    <div className=\"col\">\n                        <MoviesTable \n                        movies={movies} \n                        onDelete={this.handleDelete} \n                        handleLike={this.handleLike}\n                        sortColumn={sortColumn}\n                        onSort={this.onSort}\n                        newMovie={this.newMovie}/>\n\n                        <Pagination \n                        itemsCount={filtered.length} \n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={this.handlePageChange}/>\n                    </div>\n                    \n                </div>             \n            </div>\n         );\n    }\n}\n\nexport default Movies;","import _ from \"lodash\"\n\nexport function paginate(totalmovies, currentPage, pageSize){\n    \n    const startIndex = (currentPage -1) * pageSize;\n    return _(totalmovies).slice(startIndex).take(pageSize).value();\n\n}","import React, { Component } from 'react';\n\nconst Input = ({name, value, onChange, error, label, type}) => {\n    return ( \n        <div className=\"mb-3 form-group\">\n            <label htmlFor={name}> {label} </label>\n            <input \n            value={value} \n            onChange={onChange} \n            name={name} \n            type={type}\n            className=\"form-control\" \n            id={name}/>\n            \n            {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n        \n     );\n}\n \nexport default Input;","import React from 'react';\n\nconst Select = ({name, value, onChange, error, label, options}) => {\n    //console.log(\"hello::\"+options)\n    return ( \n        <div className=\"mb-3 form-group\">\n            <label htmlFor={name}> {label} </label> \n            {/* inside select .. value jo hai vo field me dikhaane k liye h.. jb edit/new kr rhe ho */}\n            <select value={value} onChange={onChange} name={name} className=\"form-control\" id={name}>        \n                <option value=\"\"/>\n                {options.map(option => (\n                    // yeh value me id options ki hai .. options name id se define ho rhe hai\n                    <option key={option._id} value={option._id}>\n                        {option.name}\n                    </option>\n                ))}   \n            </select>\n            \n            {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n        \n     );\n}\n \nexport default Select;\n\n\n\n//value me genre ki id hai .. jo basicaaly genre ko define kr rhhi h.. ushke basis pe vo edit ya delete hoga..\n// option name srf UI k liye h... value me actual ID hai","import React, { Component } from 'react';\nimport Joi from \"joi-browser\";\nimport Input from '../input';\nimport Select from '../select';\n\nclass Form extends Component {\n    state = {\n        data : { },\n        errors:{ }\n    }\n\n    //this method will validate whole form .. not only single field\n    validate = () =>{\n\n        //using Joi\n        console.log(this.state.data)\n            const result= Joi.validate(this.state.data, this.schema, {abortEarly:false})\n            console.log(result.error)\n            if(!result.error) return null;\n    \n            const errors = {}\n            for(let item of result.error.details) errors[item.path[0]] = item.message\n            return errors;\n    \n        //using normal approach of validation\n    \n            // if(this.state.data.username === \"\"){\n            //     errors.username = \"Username is required\"\n            // }\n    \n            // if(this.state.data.password === \"\"){\n            //     errors.password = \"Password is required\"\n            // }\n    \n            // return Object.keys(errors).length === 0? null : errors;\n            \n        }\n    \n        //particular field validation\n        validateProperty = ({ name , value}) => {\n            //using Joi\n                const obj = { [name]: value} // [name](computed property) yeh dynamic name lega  //obj will have only single property\n                const schema = { [name]:this.schema[name]} //schema should have only one property ,, and value will get from schema obj\n                const { error } = Joi.validate(obj, schema) // agr error hogi\n                \n                //if(error) return null;\n                //return error.details[0].message; // error -> details[0] -> message\n                    //ORR\n                \n                return error ? error.details[0].message : null;\n                \n            //using normal way\n                // if(name === \"username\"){\n                //     if(value.trim()=== \"\") return \"Username is required\"\n                // }\n                // if(name === \"password\"){\n                //     if(value.trim()=== \"\") return \"Password is required\"\n                // }\n        }\n\n        handleSubmit = (e) =>{\n            e.preventDefault();\n    \n            const errors= this.validate()\n    \n            console.log(errors)\n    \n            this.setState({errors : errors || {}}) //errors cants be set null.. it should have set to some object\n            \n            //if there are no errors, validate() will going to return null\n            if(errors) return; //if we have error then return immediately\n    \n           this.doSubmit();\n    \n        }\n\n        handleChange = ({currentTarget:input}) =>{\n        \n            const errors = {...this.state.errors};\n            //console.log(errors)\n            const errorMessage = this.validateProperty(input) //this will get error message from validateproperty function\n            if(errorMessage) errors[input.name] = errorMessage; // agr error hai toh errors obj me usko(username or password) assign ho jaaye \n            else delete errors[input.name]  // nhi toh vo name (username or password) hi delete ho jaaye\n    \n            const data = { ...this.state.data }\n            //console.log(data)\n            //data.username = e.currentTarget.value;\n            data[input.name] = input.value;\n            \n            //updated one\n            this.setState({ data, errors })\n        }\n\n        renderButton(label) {\n            return (\n                <button disabled={this.validate()} type=\"submit\" className=\"btn btn-success\">{label}</button>\n            )\n        }\n\n        renderSelect(name, label, options){\n            console.log(\"form:\"+ options)\n            const { data, errors } = this.state;\n            return(\n                <Select \n                name={name}\n                label={label}\n                value={data[name]}\n                options={options}\n                error={errors[name]}\n                onChange={this.handleChange}/>\n            )\n        }\n\n        renderInput(name, label, type = \"text\"){\n            const { data, errors } = this.state;\n            return(\n                <Input \n                type={type}\n                name={name}\n                label={label}\n                value={data[name]}\n                error={errors[name]}\n                onChange={this.handleChange}/>\n            )\n        }\n}\n \nexport default Form;","import React, { Component } from 'react';\n//import \"bootstrap/dist/css/bootstrap.css\";\n//import Input from './input';\nimport Joi from 'joi-browser'\nimport Form from \"./Common/form\"\n\nclass LoginForm extends Form {\n    \n    state = {\n        data : { username:\"\", password: \"\"},\n        errors:{\n            // username:\"Username is required\",\n            // password:\"Password is required\"\n        }\n    }\n\n    //completely dependent on eact form\n    schema = {\n        username : Joi.string().required().label(\"Username\"),\n        password: Joi.string().required().label(\"Password\")\n    }   \n\n    doSubmit = () =>{\n         //call the server\n         console.log(\"submitted\")\n    }\n\n    \n    render() { \n        // const { data, errors } = this.state;\n\n        return ( \n        <div>\n            <h1>Login Form</h1>\n\n            <form onSubmit={this.handleSubmit}>\n                \n                {this.renderInput('username',\"Username\")}\n                \n                {this.renderInput(\"password\", \"Password\", \"password\")}\n                \n                {/* old way */}\n                {/* <Input name=\"password\"\n                label=\"Password\"\n                value={data.password}\n                error={this.state.errors.password}\n                onChange={this.handleChange}/> */}\n                \n                {/* button */}\n                {this.renderButton(\"Login\")}\n            </form>\n        </div> \n        );\n    }\n}\n \nexport default LoginForm;","import React, { Component } from 'react';\nimport Form from './Common/form';\nimport  Joi  from 'joi-browser';\n\nclass Registration extends Form {\n    state = {\n        data : { username:\"\", password: \"\", name:\"\"},\n        errors:{\n            // username:\"Username is required\",\n            // password:\"Password is required\"\n        }\n    }\n\n    schema = {\n        username: Joi.string().required().email().label(\"Email\"),\n        password: Joi.string().required().min(5).label(\"Password\"),\n        name: Joi.string().required().label(\"Name\"),\n    }\n\n\n    doSubmit = () =>{\n        //call the server\n        console.log(\"Registered\")\n   }\n\n    render() { \n        return ( \n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"username\",\"Username\")}\n                    {this.renderInput(\"password\",\"Password\",\"password\")}\n                    {this.renderInput(\"name\",\"Name\")}\n\n\n                    {this.renderButton(\"Register\")}\n                </form>\n            </div>\n         );\n    }\n}\n \nexport default Registration;","import React, { Component } from 'react';\nimport { getGenres } from './Services/fakeGenre';\nimport { getMovie, saveMovie } from './Services/fakeMovies';\nimport  Joi  from 'joi-browser';\nimport Form from './Common/form';\n\nclass MovieForm extends Form {\n    state = { \n        data: {\n            title:\"\", genreId:\"\", numberInStock:\"\", dailyRentalRate:\"\"\n        },\n\n        // genreId: above we particularly care about genre id only..\n\n        genres:[],   //in componentdidmount later will get genre from imaginary server (fake genre)\n        errors:{}\n     }\n\n    schema = {\n        _id: Joi.string(),\n        title: Joi.string().required().label(\"Title\"),\n        genreId: Joi.string().required().label(\"Genre\"),\n        numberInStock: Joi.number().required().min(0).max(100).label(\"Number In Stock\"),\n        dailyRentalRate: Joi.number().required().min(0).max(100).label(\"Daily Rental Rate\")\n    } \n\n    componentDidMount(){\n        const genres = getGenres();\n        this.setState({genres})\n\n        const movieId = this.props.match.params.id;\n        // agr \"new\" hai toh immideatly return krdenge ..bcz we dont need to populate the form with existing movie obj\n        if(movieId === \"new\") return;  \n       // console.log(\"new\")\n\n        const movie = getMovie(movieId) //from movies db will get particular movie obj .. (GetMovie)\n        if(!movie) return this.props.history.replace(\"/not-found\");\n\n        //console.log(\"new\")\n        this.setState({ data: this.mapToViewModel(movie)}); \n        //this method will get movie obj and maps it to the diff movie obj which we can use in this form\n    }\n\n    mapToViewModel(movie){   //basically we are retuning new obj\n        return{\n        _id: movie._id,\n        title : movie.title,\n        genreId: movie.genre._id,\n        numberInStock: movie.numberInStock,\n        dailyRentalRate: movie.dailyRentalRate\n        }\n    }\n\n    doSubmit = () =>{\n        saveMovie(this.state.data)  \n        //function in fake movie service (agr movie id, DB me kisi movie se match nhi ki toh usko new movie id assign ho jaayegi)\n\n        //this.state.data is viewmodal.. which look exactly like mapviewmodal function\n\n        //will save the movie \n\n        this.props.history.push(\"/movies\"); // and redirect user to /movies\n    }\n\n    render() { \n        return ( \n            <>\n                <h1>Movie Form</h1>\n\n                <form onSubmit={this.handleSubmit}>\n                    \n                    {this.renderInput('title',\"title\")}\n                    {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n                    {this.renderInput(\"numberInStock\", \"Number In Stock\", \"number\")}\n                    {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n                    \n                    {this.renderButton(\"Save\")}\n                </form>\n            </>\n         );\n    }\n}\n \nexport default MovieForm;\n\n\n\n// 1st: sabe pehle kisi bhi movie pe click krna ya new add krna me sb render hoga component did mount method se\n    //--> agr para me new hai toh vo khaali form render kega\n    //--> agr movie id h para me vo fake movies se movie obj uthayega or yaha pe set state krdega..\n    //--> set kreke vo render krdega .. form or select ya input component k through\n\n//Ab Edit ya new add krne pe\n//--> sbse pehle kuch bhi change kre value me.. toh onchange chlega.. ushke saare function chalenge .. \n//--->state set hote hi .. change render ho jaayega\n// or fr save krenge form ko.. toh onsubmit chalega.. or save movie method particular movie ka data push krdega..\n","//import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport { Route, Switch , Redirect} from \"react-router-dom\";\nimport Navbar from './Components/navbar';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Carts from \"./Components/carts\";\nimport Todos from \"./Components/Todos\"\nimport Footer from './Components/footer';\nimport AddTodo from \"./Components/AddTodo\";\nimport Notfound from './Components/notFound';\nimport Home from './Components/home';\nimport Dashboard from './Components/Admin/dashboard';\nimport Movies from './Components/movies';\nimport \"font-awesome/css/font-awesome.css\"\n//import MovieDetail from './Components/movieDetail';\nimport LoginForm from './Components/loginForm';\nimport './App.css';\nimport Registration from './Components/registration';\nimport MovieForm from './Components/movieForm';\n\nclass App extends Component {\n    state = { \n        counters:[\n            {id:1, value:4},\n            {id:2, value:0},\n            {id:3, value:0},\n            {id:4, value:0},\n        ],\n\n        Todos:[\n          {sno:1, item: \"Cricket\", place:\"mumbai\"},\n          {sno:2, item: \"Cricket\", place:\"Bengaluru\"},\n          {sno:3, item: \"Cricket\", place:\"Ahmedabad\"},\n          {sno:4, item: \"Cricket\", place:\"Pune\"}\n        ]\n\n    }\n\n      handleIncrement = counter => {\n          const counters = [ ...this.state.counters ];\n          const index = counters.indexOf(counter);\n          counters[index] = {...counter};\n          counters[index].value++;\n          this.setState({counters});\n      }\n      handleDecrement = counter => {\n        const counters = [ ...this.state.counters ];\n        const index = counters.indexOf(counter);\n        counters[index] = {...counter};\n        counters[index].value--;\n        this.setState({counters});\n    }\n\n      handleDelete = (counterId)=>{\n          let counters = this.state.counters.filter(c => c.id !== counterId)\n          this.setState({counters});\n      }\n\n      handleReset = () =>{\n          let counters = this.state.counters.map(c  => {\n              c.value = 0\n              return c;\n          })\n          this.setState({counters})\n      }\n\n      handleTodoDelete = (todoId)=>{\n        let Todos = this.state.Todos.filter(t => t.sno !== todoId)\n        this.setState({Todos});\n    }\n\n      addTodo = (item, place) => {\n        let sno= this.state.Todos.length +1\n        const myTodo = {\n          sno:sno,\n          item:item,\n          place: place\n        }\n        this.setState({ Todos: [...this.state.Todos, myTodo]})\n      }\n\n  render() { \n    const { counters, Todos:todos} = this.state;\n    return (\n      <React.Fragment>\n        <Navbar totalCounters={counters.filter(c=> c.value > 0).length}/>\n\n        \n        <main className=\"container\">\n          <Switch>\n            \n            <Route path=\"/todo\" render={()=>\n              <main className=\"container\">\n                <AddTodo addtodo={this.addTodo}/>\n                <Todos todolist={todos} onDelete={this.handleTodoDelete}/>\n              </main>\n            }\n            />\n            <Route path=\"/cart\" render={()=>\n              <Carts \n              counters={counters}\n              onIncrement={this.handleIncrement}\n              onDecrement={this.handleDecrement}\n              onDelete={this.handleDelete}\n              onReset={this.handleReset}\n            />\n            }\n            />\n            <Redirect from=\"/hello\" to=\"/cart\"/>   \n            <Route path=\"/login\" component={LoginForm}/>\n            <Route path=\"/registration\" component={Registration}/>\n            <Route path=\"/admin\" component={Dashboard}/>\n            {/* <Route path=\"/movies/new\" component={newMovie}/> */}\n            <Route path=\"/movies/:id\" component={MovieForm}/>\n            <Route path=\"/movies\" component={Movies}/>\n            <Route path=\"/notfound\" component={Notfound}/>\n            <Route path=\"/\" exact component={Home}/>\n            <Redirect to=\"/notfound\"/>\n          </Switch>    \n        </main>\n\n        {/* <Footer/> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}